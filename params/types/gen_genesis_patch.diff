diff --git a/params/types/gen_genesis.go b/params/types/gen_genesis.go
index 392b710fd..e1f040978 100644
--- a/params/types/gen_genesis.go
+++ b/params/types/gen_genesis.go
@@ -11,6 +11,7 @@ import (
 	"github.com/ethereum/go-ethereum/common/hexutil"
 	"github.com/ethereum/go-ethereum/common/math"
 	common0 "github.com/ethereum/go-ethereum/params/types/common"
+	"github.com/ethereum/go-ethereum/params/types/goethereum"
 )
 
 var _ = (*genesisSpecMarshaling)(nil)
@@ -69,9 +70,26 @@ func (g *Genesis) UnmarshalJSON(input []byte) error {
 		ParentHash *common.Hash                                `json:"parentHash"`
 	}
 	var dec Genesis
-	if err := json.Unmarshal(input, &dec); err != nil {
-		return err
+
+	// Use a stand-in MultiGeth chain configuration struct.
+	// MultiGeth has an ever-preset 'networkID' field, where
+	// go-ethereum doesn't. This should be enough to differentiate them.
+	type MGC struct {
+		NetworkID uint64   `json:"networkId"`
+	}
+	var mgc MGC
+	if err := json.Unmarshal(input, &mgc); err != nil {
+		dec.Config = &MultiGethChainConfig{}
+		if err := json.Unmarshal(input, &dec); err != nil {
+			return err
+		}
+	} else {
+		dec.Config = &goethereum.ChainConfig{}
+		if err := json.Unmarshal(input, &dec); err != nil {
+			return err
+		}
 	}
+
 	if dec.Config != nil {
 		g.Config = dec.Config
 	}
